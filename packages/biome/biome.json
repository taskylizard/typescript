{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "vcs": {
    "clientKind": "git",
    "enabled": true
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 80,
    "attributePosition": "auto"
  },
  "css": {
    "linter": {
      "enabled": true
    },
    "formatter": {
      "enabled": true
    }
  },
  "json": {
    "linter": {
      "enabled": true
    },
    "formatter": {
      "enabled": true
    }
  },
  "organizeImports": {
    "enabled": true
  },
  "assists": {
    "enabled": true
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": false,
      "a11y": {
        "noAccessKey": "error",
        "noAriaUnsupportedElements": "error",
        "noAutofocus": "error",
        "noBlankTarget": "error",
        "noDistractingElements": "error",
        "noHeaderScope": "error",
        "noInteractiveElementToNoninteractiveRole": "error",
        "noNoninteractiveElementToInteractiveRole": "error",
        "noNoninteractiveTabindex": "error",
        "noPositiveTabindex": "error",
        "noRedundantAlt": "error",
        "noRedundantRoles": "error",
        "useAltText": "error",
        "useAnchorContent": "error",
        "useAriaActivedescendantWithTabindex": "error",
        "useAriaPropsForRole": "error",
        "useButtonType": "warn",
        "useHeadingContent": "error",
        "useHtmlLang": "error",
        "useIframeTitle": "error",
        "useKeyWithClickEvents": "error",
        "useKeyWithMouseEvents": "error",
        "useMediaCaption": "error",
        "useValidAnchor": "error",
        "useValidAriaProps": "error",
        "useValidAriaRole": "error",
        "useValidAriaValues": "error",
        "noLabelWithoutControl": "error"
      },
      "complexity": {
        "noExtraBooleanCast": "error",
        "noMultipleSpacesInRegularExpressionLiterals": "error",
        "noUselessCatch": "error",
        "noUselessFragments": "warn",
        "noUselessLabel": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "warn",
        "noUselessTernary": "error",
        "noWith": "error",
        "useRegexLiterals": "error",
        "noUselessStringConcat": "error",
        "noUselessUndefinedInitialization": "warn",
        "noExcessiveCognitiveComplexity": "warn"
      },
      "correctness": {
        "noChildrenProp": "error",
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noConstructorReturn": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInnerDeclarations": "error",
        "noInvalidConstructorSuper": "error",
        "noNewSymbol": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedVariables": "error",
        "useArrayLiterals": "error",
        "useExhaustiveDependencies": "warn",
        "useHookAtTopLevel": "error",
        "useIsNan": "error",
        "useJsxKeyInIterable": "error",
        "useValidForDirection": "error",
        "useYield": "error"
      },
      "nursery": {
        "noDuplicateElseIf": "error"
      },
      "security": {
        "noDangerouslySetInnerHtmlWithChildren": "error",
        "noGlobalEval": "error"
      },
      "style": {
        "noArguments": "error",
        "noCommaOperator": "error",
        "noDefaultExport": "error",
        "noImplicitBoolean": "warn",
        "noNonNullAssertion": "off",
        "noParameterAssign": "error",
        "noUselessElse": "warn",
        "noVar": "error",
        "useBlockStatements": "off",
        "useCollapsedElseIf": "warn",
        "useConst": "warn",
        "useFilenamingConvention": {
          "level": "error",
          "options": {
            "requireAscii": true,
            "filenameCases": ["kebab-case"]
          }
        },
        "useFragmentSyntax": "warn",
        "useNodejsImportProtocol": "warn",
        "useNumericLiterals": "error",
        "useTemplate": "warn",
        "noNamespace": "error",
        "useSelfClosingElements": "error",
        "useImportType": "warn",
        "noUnusedTemplateLiteral": "error",
        "noYodaExpression": "warn",
        "useConsistentBuiltinInstantiation": "error",
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": false,
            "conventions": [
              {
                "selector": {
                  "kind": "enum"
                },
                "formats": ["CONSTANT_CASE", "PascalCase"]
              },
              {
                "selector": {
                  "kind": "typeParameter"
                },
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "any"
                },
                "match": "[ab_]|(.{2,})"
              },
              {
                "selector": {
                  "kind": "objectLiteralMember"
                },
                "match": ".*"
              },
              {
                "selector": {
                  "kind": "typeMember"
                },
                "match": ".*"
              },
              {
                "selector": {
                  "kind": "variable"
                },
                "match": ".*"
              }
            ]
          }
        }
      },
      "suspicious": {
        "noArrayIndexKey": "warn",
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCommentText": "error",
        "noCompareNegZero": "error",
        "noConfusingLabels": "error",
        "noConsoleLog": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateJsxProps": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noLabelVar": "error",
        "noMisleadingCharacterClass": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noSelfCompare": "error",
        "noShadowRestrictedNames": "error",
        "noUnsafeDeclarationMerging": "warn",
        "noUnsafeNegation": "error",
        "useAwait": "error",
        "useDefaultSwitchClauseLast": "error",
        "useGetterReturn": "error",
        "useIsArray": "error",
        "useValidTypeof": "error",
        "useNamespaceKeyword": "error",
        "noEmptyInterface": "error",
        "noApproximativeNumericConstant": "error",
        "noSuspiciousSemicolonInJsx": "error"
      }
    },
    "ignore": ["!.*.js", "!.*.ts?(x)", "!.*.js?(x)", "!.*.mjs", "!.*.mts"]
  },
  "javascript": {
    "globals": ["Bun"],
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "none",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "quoteStyle": "single",
      "attributePosition": "auto"
    }
  },
  "overrides": [
    {
      "include": ["*.tsx", "*.jsx"],
      "linter": {
        "rules": {
          "style": {
            "useFilenamingConvention": {
              "level": "error",
              "options": {
                "requireAscii": true,
                "filenameCases": ["PascalCase"]
              }
            }
          }
        }
      }
    },
    {
      "include": [
        "entry-client.tsx",
        "entry-server.tsx",
        "index.tsx",
        "app.tsx"
      ],
      "linter": {
        "rules": {
          "style": {
            "useFilenamingConvention": "off"
          }
        }
      }
    },
    {
      "include": ["*.ts?(x)", "*.js?(x)", "*.mjs", "*.mts"]
    }
  ]
}
